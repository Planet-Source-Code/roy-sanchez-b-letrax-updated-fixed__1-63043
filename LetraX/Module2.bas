Attribute VB_Name = "Module2"
'Declaration section
Public Declare Function CreatePopupMenu Lib "user32.dll" () As Long
Public Declare Function DestroyMenu Lib "user32.dll" (ByVal hMenu As Long) As Long
Public Type MENUITEMINFO
        cbSize As Long
        fMask As Long
        fType As Long
        fState As Long
        wID As Long
        hSubMenu As Long
        hbmpChecked As Long
        hbmpUnchecked As Long
        dwItemData As Long
        dwTypeData As String
        cch As Long
End Type
Public Const MIIM_STATE = &H1
Public Const MIIM_ID = &H2
Public Const MIIM_SUBMENU = &H4
Public Const MIIM_CHECKMARKS = &H8
Public Const MIIM_DATA = &H20
Public Const MIIM_TYPE = &H10
Public Const MFT_BITMAP = &H4
Public Const MFT_MENUBARBREAK = &H20
Public Const MFT_MENUBREAK = &H40
Public Const MFT_OWNERDRAW = &H100
Public Const MFT_RADIOCHECK = &H200
Public Const MFT_RIGHTJUSTIFY = &H4000
Public Const MFT_RIGHTORDER = &H2000
Public Const MFT_SEPARATOR = &H800
Public Const MFT_STRING = &H0
Public Const MFS_CHECKED = &H8
Public Const MFS_DEFAULT = &H1000
Public Const MFS_DISABLED = &H2
Public Const MFS_ENABLED = &H0
Public Const MFS_GRAYED = &H1
Public Const MFS_HILITE = &H80
Public Const MFS_UNCHECKED = &H0
Public Const MFS_UNHILITE = &H0
Public Declare Function InsertMenuItem Lib "user32.dll" Alias "InsertMenuItemA" _
(ByVal hMenu As Long, ByVal uItem As Long, ByVal fByPosition As Long, lpmii As MENUITEMINFO) As Long
Public Declare Function TrackPopupMenu Lib "user32.dll" _
(ByVal hMenu As Long, ByVal uFlags As Long, ByVal X As Long, ByVal Y As Long, _
ByVal nReserved As Long, ByVal hWnd As Long, ByVal prcRect As Long) As Long
Public Const TPM_RIGHTALIGN = &H8&
Public Const TPM_CENTERALIGN = &H4&
Public Const TPM_LEFTALIGN = &H0
Public Const TPM_TOPALIGN = &H0
Public Const TPM_NONOTIFY = &H80
Public Const TPM_RETURNCMD = &H100
Public Const TPM_LEFTBUTTON = &H0
Public Const TPM_RIGHTBUTTON = &H2&
Public Type POINT_TYPE
X As Long
Y As Long
End Type
Public Declare Function GetCursorPos Lib "user32.dll" (lpPoint As POINT_TYPE) As Long
Public Declare Function AppendMenu Lib "user32" Alias "AppendMenuA" (ByVal hMenu As Long, ByVal wFlags As Long, ByVal wIDNewItem As Long, ByVal lpNewItem As Any) As Long
Public Declare Function SetMenuItemBitmaps Lib "user32" (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long, ByVal hBitmapUnchecked As Long, ByVal hBitmapChecked As Long) As Long




Public Sub menu_emergente()


'--------------------------------------------------------------------------------------------------------------------------
'CODE AUTOGENERATED WITH:  MC API Menu Code Generator ver 2.0
'---------------------------------------------------------------------------------------------------------------------------
Dim hPopupMenu1 As Long ' handle to the popup menu to display
Dim mii1 As MENUITEMINFO   ' describes menu items to add
Dim curpos As POINT_TYPE  ' holds the current mouse coordinates
Dim menusel As Long       ' ID of what the user selected in the popup menu
Dim retval As Long        ' generic return value


'Create the popup menus which are initialy empty.
hPopupMenu1 = CreatePopupMenu()

'Create the structure which is the base for all menus:
With mii1
.cbSize = Len(mii1) ' The size of this structure.
.fMask = MIIM_STATE Or MIIM_ID Or MIIM_TYPE Or MIIM_SUBMENU ' Which elements of the structure to use.
End With

'Make all structures equal
With mii1 '(Fuente...)
.fType = MFT_STRING
.fState = MFS_ENABLED
.wID = 700 ' Assign this item an item identifier.
.dwTypeData = "Fuente..."
.cch = Len("Fuente...")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 0, 1, mii1)


With mii1 '(Color Fondo...)
.fType = MFT_STRING
.fState = MFS_ENABLED
.wID = 800 ' Assign this item an item identifier.
.dwTypeData = "Color Fondo..."
.cch = Len("Color Fondo...")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 1, 1, mii1)


With mii1 '(/separator/)
.fType = MFT_SEPARATOR
.fState = MFS_ENABLED
.wID = 900 ' Assign this item an item identifier.
.dwTypeData = "/separator/"
.cch = Len("/separator/")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 2, 1, mii1)




With mii1 '(Copiar)
.fType = MFT_STRING
If Frm_LetraX.RichTextBox1.SelText <> "" Then
  .fState = MFS_ENABLED
Else
  .fState = MFS_GRAYED
  End If
.wID = 1003 ' Assign this item an item identifier.
.dwTypeData = "Copiar"
.cch = Len("Copiar")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 3, 1, mii1)


With mii1 '(Pegar)
.fType = MFT_STRING
If Clipboard.GetFormat(vbCFText) Then
  .fState = MFS_ENABLED
Else
  .fState = MFS_GRAYED
  End If
.wID = 1002 ' Assign this item an item identifier.
.dwTypeData = "Pegar"
.cch = Len("Pegar")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 4, 1, mii1)


With mii1 '(/separator/)
.fType = MFT_SEPARATOR
.fState = MFS_ENABLED
.wID = 1001 ' Assign this item an item identifier.
.dwTypeData = "/separator/"
.cch = Len("/separator/")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 5, 1, mii1)

With mii1 '(Seleccionar todo)
.fType = MFT_STRING
If Frm_LetraX.RichTextBox1.Text <> "" Then
  .fState = MFS_ENABLED
Else
  .fState = MFS_GRAYED
  End If
.wID = 1000 ' Assign this item an item identifier.
.dwTypeData = "Seleccionar todo"
.cch = Len("Seleccionar todo")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 6, 1, mii1)

'The following code is for adding pictures into menus, if there are any!
'------------------------------------------------------------
'------------------------------------------------------------

'------------------------------------------------------------
'------------------------------------------------------------

retval = GetCursorPos(curpos)
menusel = TrackPopupMenu(hPopupMenu1, TPM_TOPALIGN Or TPM_NONOTIFY Or TPM_RETURNCMD Or TPM_RIGHTALIGN Or TPM_RIGHTBUTTON, curpos.X, curpos.Y, 0, Frm_LetraX.hWnd, 0)
retval = DestroyMenu(hPopupMenu1)
'------------------------------------------------------------------------------------------------
'DOWN BELOW  PUT IN YOUR CODE MANUALY !!!!
'------------------------------------------------------------------------------------------------
Select Case menusel
Case 700
    ' Shows the Font dialogue box and sets the current font.

Frm_LetraX.RichTextBox1.SelStart = 0
Frm_LetraX.RichTextBox1.SelLength = Len(Frm_LetraX.RichTextBox1.Text)

Frm_LetraX.CDL1.Flags = cdlCFBoth Or cdlCFEffects
If Frm_LetraX.RichTextBox1.SelColor <> "" Then
Frm_LetraX.CDL1.Color = Frm_LetraX.RichTextBox1.SelColor
Frm_LetraX.CDL1.FontBold = Frm_LetraX.RichTextBox1.Font.Bold
End If
Frm_LetraX.CDL1.FontName = Frm_LetraX.RichTextBox1.Font.Name
Frm_LetraX.CDL1.FontSize = Frm_LetraX.RichTextBox1.Font.Size
Frm_LetraX.CDL1.FontUnderline = Frm_LetraX.RichTextBox1.Font.Underline
Frm_LetraX.CDL1.FontStrikethru = Frm_LetraX.RichTextBox1.Font.Strikethrough
Frm_LetraX.CDL1.ShowFont

Frm_LetraX.RichTextBox1.SelFontName = Frm_LetraX.CDL1.FontName
Frm_LetraX.RichTextBox1.SelFontSize = Frm_LetraX.CDL1.FontSize
Frm_LetraX.RichTextBox1.SelBold = Frm_LetraX.CDL1.FontBold
Frm_LetraX.RichTextBox1.SelItalic = Frm_LetraX.CDL1.FontItalic
Frm_LetraX.RichTextBox1.SelUnderline = Frm_LetraX.CDL1.FontUnderline
Frm_LetraX.RichTextBox1.SelStrikeThru = Frm_LetraX.CDL1.FontStrikethru
Fuente_Color = Frm_LetraX.CDL1.Color
Frm_LetraX.RichTextBox1.SelColor = Fuente_Color
Frm_LetraX.RichTextBox1.Refresh
With Frm_LetraX.RichTextBox1
    .Font.Name = Frm_LetraX.CDL1.FontName
    .Font.Size = Frm_LetraX.CDL1.FontSize
    .Font.Bold = Frm_LetraX.CDL1.FontBold
    .Font.Italic = Frm_LetraX.CDL1.FontItalic
    .Font.Strikethrough = Frm_LetraX.CDL1.FontStrikethru
    .Font.Underline = Frm_LetraX.CDL1.FontUnderline
    .SelColor = Frm_LetraX.CDL1.Color
End With
Case 800
Frm_LetraX.CDL1.Color = Frm_LetraX.RichTextBox1.BackColor
Frm_LetraX.CDL1.Flags = cdlCCFullOpen 'cdlCCFullOpen
Frm_LetraX.CDL1.ShowColor

Frm_LetraX.RichTextBox1.BackColor = Frm_LetraX.CDL1.Color

Case 1003 '(Copiar)

   ' Borra el contenido del Portapapeles.
   Clipboard.Clear
   ' Copia el texto seleccionado al Portapapeles.
   Clipboard.SetText Screen.ActiveControl.SelText


Case 1002 '(Pegar)

   ' Lleva el texto del Portapapeles al control activo.
   Screen.ActiveControl.SelColor = Fuente_Color
   Screen.ActiveControl.SelText = Clipboard.GetText()
   Clipboard.Clear

Case 1000
Frm_LetraX.RichTextBox1.SelStart = 0
Frm_LetraX.RichTextBox1.SelLength = Len(Frm_LetraX.RichTextBox1.Text)

Case Else
End Select
End Sub

Public Sub menu_emergente2()


'--------------------------------------------------------------------------------------------------------------------------
'CODE AUTOGENERATED WITH:  MC API Menu Code Generator ver 2.0
'---------------------------------------------------------------------------------------------------------------------------
Dim hPopupMenu1 As Long ' handle to the popup menu to display
Dim mii1 As MENUITEMINFO   ' describes menu items to add
Dim curpos As POINT_TYPE  ' holds the current mouse coordinates
Dim menusel As Long       ' ID of what the user selected in the popup menu
Dim retval As Long        ' generic return value


'Create the popup menus which are initialy empty.
hPopupMenu1 = CreatePopupMenu()

'Create the structure which is the base for all menus:
With mii1
.cbSize = Len(mii1) ' The size of this structure.
.fMask = MIIM_STATE Or MIIM_ID Or MIIM_TYPE Or MIIM_SUBMENU ' Which elements of the structure to use.
End With

'Make all structures equal
With mii1 '(Restablecer)
.fType = MFT_STRING
.fState = MFS_ENABLED
.wID = 700 ' Assign this item an item identifier.
.dwTypeData = "Restablecer"
.cch = Len("Restablecer")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 0, 1, mii1)


With mii1 '(Salir)
.fType = MFT_STRING
.fState = MFS_ENABLED
.wID = 800 ' Assign this item an item identifier.
.dwTypeData = "Salir"
.cch = Len("Salir")
.hSubMenu = 0
End With
retval = InsertMenuItem(hPopupMenu1, 1, 1, mii1)



'The following code is for adding pictures into menus, if there are any!
'------------------------------------------------------------
'------------------------------------------------------------

'------------------------------------------------------------
'------------------------------------------------------------

retval = GetCursorPos(curpos)
menusel = TrackPopupMenu(hPopupMenu1, TPM_TOPALIGN Or TPM_NONOTIFY Or TPM_RETURNCMD Or TPM_RIGHTALIGN Or TPM_RIGHTBUTTON, curpos.X, curpos.Y, 0, Frm_LetraX.hWnd, 0)
retval = DestroyMenu(hPopupMenu1)
'------------------------------------------------------------------------------------------------
'DOWN BELOW  PUT IN YOUR CODE MANUALY !!!!
'------------------------------------------------------------------------------------------------
Select Case menusel
Case 700
    Frm_LetraX.WindowState = 0
    Frm_LetraX.Visible = True

Case 800
    Frm_LetraX.Cerrar_Programa
Case Else
End Select

End Sub
